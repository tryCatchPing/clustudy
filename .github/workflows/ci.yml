name: Flutter CI

on:
  push:
    branches: [main, dev]
  pull_request:
    branches: [main, dev]

jobs:
  analyze:
    name: Code Analysis
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.32.5" # FVM 버전과 일치
          channel: "stable"
          cache: true

      - name: Install dependencies
        run: flutter pub get

      - name: Run code analysis
        run: flutter analyze --no-fatal-infos

  build:
    name: Build Applications
    runs-on: ubuntu-latest
    needs: analyze # 분석 통과 후 빌드

    strategy:
      matrix:
        build-target: [web, android]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.32.5" # FVM 버전과 일치
          channel: "stable"
          cache: true

      - name: Cache Gradle (Android)
        if: matrix.build-target == 'android'
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
            android/.gradle
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Install dependencies
        run: flutter pub get

      - name: Build Web
        if: matrix.build-target == 'web'
        run: flutter build web --release

      - name: Build Android APK
        if: matrix.build-target == 'android'
        run: flutter build apk --debug

  # 테스트 job은 주석 처리 (테스트 파일 준비되면 활성화)
  # test:
  #   name: Run Tests
  #   runs-on: ubuntu-latest
  #
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v4
  #
  #     - name: Setup Flutter
  #       uses: subosito/flutter-action@v2
  #       with:
  #         flutter-version: "3.32.5"
  #         channel: "stable"
  #         cache: true
  #
  #     - name: Install dependencies
  #       run: flutter pub get
  #
  #     - name: Run tests
  #       run: flutter test
