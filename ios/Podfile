# Uncomment this line to define a global platform for your project
# platform :ios, '12.0'

# CocoaPods analytics sends network stats synchronously affecting flutter build latency.
ENV['COCOAPODS_DISABLE_STATS'] = 'true'

project 'Runner', {
  'Debug' => :debug,
  'Profile' => :release,
  'Release' => :release,
}

def flutter_root
  generated_xcode_build_settings_path = File.expand_path(File.join('..', 'Flutter', 'Generated.xcconfig'), __FILE__)
  unless File.exist?(generated_xcode_build_settings_path)
    raise "#{generated_xcode_build_settings_path} must exist. If you're running pod install manually, make sure flutter pub get is executed first"
  end

  File.foreach(generated_xcode_build_settings_path) do |line|
    matches = line.match(/FLUTTER_ROOT\=(.*)/)
    return matches[1].strip if matches
  end
  raise "FLUTTER_ROOT not found in #{generated_xcode_build_settings_path}. Try deleting Generated.xcconfig, then run flutter pub get"
end

require File.expand_path(File.join('packages', 'flutter_tools', 'bin', 'podhelper'), flutter_root)

flutter_ios_podfile_setup

target 'Runner' do
  use_frameworks! :linkage => :static

  flutter_install_all_ios_pods File.dirname(File.realpath(__FILE__))
  target 'RunnerTests' do
    inherit! :search_paths
  end
end

post_install do |installer|
  installer.pods_project.targets.each do |target|
    flutter_additional_ios_build_settings(target)

    if target.name == 'Pods-Runner' || target.name.downcase.include?('firebase_crashlytics') || target.name.include?('FirebaseCrashlytics')
      target.build_configurations.each do |config|
        config.build_settings['CLANG_ALLOW_NON_MODULAR_INCLUDES_IN_FRAMEWORK_MODULES'] = 'YES'
        config.build_settings['GCC_PREPROCESSOR_DEFINITIONS'] ||= ['$(inherited)']
        config.build_settings['OTHER_CFLAGS'] = '$(inherited) -Wno-non-modular-include-in-framework-module'
        if target.name.downcase.include?('firebase_crashlytics') || target.name.include?('FirebaseCrashlytics')
          config.build_settings['DEFINES_MODULE'] = 'NO'
        end
      end
    end
  end

  crashlytics_base = File.expand_path(File.join(__dir__, '.symlinks', 'plugins', 'firebase_crashlytics', 'ios', 'Classes'))
  crashlytics_headers = [
    File.join(crashlytics_base, 'Crashlytics_Platform.h'),
    File.join(crashlytics_base, 'ExceptionModel_Platform.h'),
  ]

  crashlytics_headers.each do |path|
    next unless File.exist?(path)

    contents = File.read(path)
    next unless contents.include?('<Firebase/Firebase.h>')

    File.write(path, contents.gsub('<Firebase/Firebase.h>', '<FirebaseCrashlytics/FirebaseCrashlytics.h>'))
  end
end
